{"version":3,"sources":["components/Intro/Intro.jsx","App.js","serviceWorker.js","index.js","logo.svg"],"names":["Intro","content","className","params","particles","number","value","density","enable","value_area","color","shape","type","stroke","width","polygon","nb_sides","opacity","random","size","line_linked","distance","move","speed","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","push","particles_nb","remove","style","zIndex","xmlns","viewBox","d","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","module","exports"],"mappings":"+LAgIeA,MA5Hf,WACI,IAAMC,EACF,yBAAKC,UAAU,aACX,kBAAC,IAAD,CACIA,UAAW,YACXC,OAAQ,CACJC,UAAW,CACPC,OAAQ,CACJC,MAAO,GACPC,QAAS,CACLC,QAAQ,EACRC,WAAY,MAGpBC,MAAO,CACHJ,MAAO,WAEXK,MAAO,CACHC,KAAM,SACNC,OAAQ,CACJC,MAAO,EACPJ,MAAO,WAEXK,QAAS,CACLC,SAAU,IAGlBC,QAAS,CACLX,MAAO,EACPY,QAAQ,GAEZC,KAAM,CACFb,MAAO,GACPY,QAAQ,GAEZE,YAAa,CACTZ,QAAQ,EACRa,SAAU,IACVX,MAAO,UACPO,QAAS,GACTH,MAAO,GAEXQ,KAAM,CACFd,QAAQ,EACRe,MAAO,EACPC,UAAW,OACXN,QAAQ,EACRO,UAAU,EACVC,SAAU,MACVC,QAAQ,EACRC,QAAS,CACLpB,QAAQ,EACRqB,QAAS,IACTC,QAAS,QAIrBC,cAAe,CACXC,UAAW,SACXC,OAAQ,CACJC,QAAS,CACL1B,QAAQ,EACR2B,KAAM,WAEVC,QAAS,CACL5B,QAAQ,EACR2B,KAAM,QAEVE,QAAQ,GAEZC,MAAO,CACHC,KAAM,CACFlB,SAAU,IACVD,YAAa,CACTH,QAAS,IAGjBuB,OAAQ,CACJnB,SAAU,IACVF,KAAM,GACNsB,SAAU,EACVxB,QAAS,EACTM,MAAO,GAEXmB,QAAS,CACLrB,SAAU,IACVoB,SAAU,IAEdE,KAAM,CACFC,aAAc,GAElBC,OAAQ,CACJD,aAAc,QAOlC,yBAAK1C,UAAU,kBACX,yBAAKA,UAAU,WAEX,2CAGA,oDAKR,yBAAK4C,MAAO,CAAEC,OAAQ,KAClB,yBAAK7C,UAAU,WAAW8C,MAAM,6BAA6BC,QAAQ,aAAY,0BAAMC,EAAE,qPACzF,yBAAKhD,UAAU,WAAW8C,MAAM,6BAA6BC,QAAQ,aAAY,0BAAMC,EAAE,+sBACzF,yBAAKhD,UAAU,WAAW8C,MAAM,6BAA6BC,QAAQ,aAAY,0BAAMC,EAAE,mNAIrG,OACI,6BACKjD,ICjGEkD,MArBf,WACE,OACE,yBAAKjD,UAAU,OACZ,yBAAKA,UAAU,UACN,wBAAIA,UAAU,UACV,4BACI,0CAEJ,4BACI,wCAEJ,4BACI,0CAIlB,kBAAC,EAAD,QCTckD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a,6EEzI5BC,EAAOC,QAAU,IAA0B,kC","file":"static/js/main.9329159d.chunk.js","sourcesContent":["import React from 'react';\nimport './Intro.css';\nimport Particles from 'react-particles-js';\n\nfunction Intro() {\n    const content = (\n        <div className=\"headOuter\">\n            <Particles\n                className={\"particles\"}\n                params={{\n                    particles: {\n                        number: {\n                            value: 50,\n                            density: {\n                                enable: true,\n                                value_area: 800 // Denser the smaller the number.\n                            }\n                        },\n                        color: { // The color for every node, not the connecting lines.\n                            value: \"#e23e57\" // Or use an array of colors like [\"#9b0000\", \"#001378\", \"#0b521f\"]\n                        },\n                        shape: {\n                            type: \"circle\", // Can show circle, edge (a square), triangle, polygon, star, img, or an array of multiple.\n                            stroke: { // The border\n                                width: 0,\n                                color: \"#311d3f\"\n                            },\n                            polygon: { // if the shape is a polygon\n                                nb_sides: 5\n                            }\n                        },\n                        opacity: {\n                            value: 1,\n                            random: true\n                        },\n                        size: {\n                            value: 10,\n                            random: true\n                        },\n                        line_linked: {\n                            enable: false,\n                            distance: 200, // The radius before a line is added, the lower the number the more lines.\n                            color: \"#311d3f\",\n                            opacity: 0.8,\n                            width: 2\n                        },\n                        move: {\n                            enable: true,\n                            speed: 5,\n                            direction: \"none\", // Move them off the canvas, either \"none\", \"top\", \"right\", \"bottom\", \"left\", \"top-right\", \"bottom-right\" et cetera...\n                            random: false,\n                            straight: false, // Whether they'll shift left and right while moving.\n                            out_mode: \"out\", // What it'll do when it reaches the end of the canvas, either \"out\" or \"bounce\".\n                            bounce: false,\n                            attract: { // Make them start to clump together while moving.\n                                enable: true,\n                                rotateX: 600,\n                                rotateY: 1200\n                            }\n                        }\n                    },\n                    interactivity: {\n                        detect_on: \"canvas\",\n                        events: {\n                            onhover: {\n                                enable: true,\n                                mode: \"repulse\"\n                            },\n                            onclick: {\n                                enable: false,\n                                mode: \"push\"\n                            },\n                            resize: true\n                        },\n                        modes: {\n                            grab: {\n                                distance: 400,\n                                line_linked: {\n                                    opacity: 1\n                                }\n                            },\n                            bubble: {\n                                distance: 400,\n                                size: 40,\n                                duration: 2,\n                                opacity: 8,\n                                speed: 3\n                            },\n                            repulse: {\n                                distance: 200,\n                                duration: 0.4\n                            },\n                            push: {\n                                particles_nb: 4\n                            },\n                            remove: {\n                                particles_nb: 2\n                            }\n                        }\n                    }\n                }\n                }\n            />\n            <div className=\"nameDivWrapper\">\n                <div className=\"nameDiv\">\n\n                    <h1>\n                        Femi Sodiya\n                </h1>\n                    <h1>\n                        Software Developer\n                </h1>\n                </div>\n            </div>\n            <div style={{ zIndex: 50}}>\n                <svg className=\"svgIntro\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M0 0v24h24v-24h-24zm8 19h-3v-11h3v11zm-1.5-12.268c-.966 0-1.75-.79-1.75-1.764s.784-1.764 1.75-1.764 1.75.79 1.75 1.764-.783 1.764-1.75 1.764zm13.5 12.268h-3v-5.604c0-3.368-4-3.113-4 0v5.604h-3v-11h3v1.765c1.397-2.586 7-2.777 7 2.476v6.759z\" /></svg>\n                <svg className=\"svgIntro\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12 0c-6.626 0-12 5.373-12 12 0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23.957-.266 1.983-.399 3.003-.404 1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576 4.765-1.589 8.199-6.086 8.199-11.386 0-6.627-5.373-12-12-12z\" /></svg>\n                <svg className=\"svgIntro\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\"><path d=\"M12 12.713l-11.985-9.713h23.971l-11.986 9.713zm-5.425-1.822l-6.575-5.329v12.501l6.575-7.172zm10.85 0l6.575 7.172v-12.501l-6.575 5.329zm-1.557 1.261l-3.868 3.135-3.868-3.135-8.11 8.848h23.956l-8.11-8.848z\" /></svg>\n            </div>\n        </div>\n    )\n    return (\n        <div>\n            {content}\n        </div>\n    );\n}\n\nexport default Intro;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Intro from './components/Intro/Intro'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n       <div className=\"navDiv\">\n                <ul className=\"navBar\">\n                    <li>\n                        <a>Hackathons</a>\n                    </li>\n                    <li>\n                        <a>Projects</a>\n                    </li>\n                    <li>\n                        <a>About me</a>\n                    </li>\n                </ul>\n            </div>\n      <Intro />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}